<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title><?=$this->nombre_sitio?></title>
<!-- Tell the browser to be responsive to screen width -->
<meta
	content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"
	name="viewport">
<!-- Select2 -->
<link rel="stylesheet" href="../../plugins/select2/select2.min.css">
<!-- Bootstrap 3.3.4 -->
<link href="/bootstrap/css/bootstrap.min.css" rel="stylesheet"
	type="text/css" />
<!-- Font Awesome Icons -->
<link href="/font-awesome/css/font-awesome.min.css" rel="stylesheet"
	type="text/css" />
<!-- Ionicons -->
<link href="/ionicons/css/ionicons.min.css" rel="stylesheet"
	type="text/css" />

<!-- datepicker, estilos calendario -->
<link href="/plugins/datepicker/datepicker3.css" rel="stylesheet"
	type="text/css" />
	
<!-- JqueryAlerts -->
<link href = "/plugins/JqueryAlerts/jquery.alerts.css" rel = "stylesheet"> 

<!-- DateRangePicker -->
<link href="/plugins/daterangepicker/daterangepicker-bs3.css"
	rel="stylesheet" type="text/css" />

<!-- DATA TABLES -->
<!-- <link href="/plugins/datatables/dataTables.bootstrap.css" rel="stylesheet" type="text/css" />-->
<link href="/plugins/datatables/jquery.dataTables.css" rel="stylesheet"
	type="text/css" />
<link href="/plugins/datatables/dataTables.tableTools.css"
	rel="stylesheet">

<link href="/plugins/datatables/dataTables.responsive.css"
	rel="stylesheet" type="text/css" />

<!-- iCheck for checkboxes and radio inputs -->
<link href="../../plugins/iCheck/all.css" rel="stylesheet"
	type="text/css" />

<!-- Theme style -->
<link href="/dist/css/AdminLTE.min.css" rel="stylesheet" type="text/css" />
<!-- AdminLTE Skins. We have chosen the skin-blue for this starter
          page. However, you can choose any other skin. Make sure you
          apply the skin class to the body tag so the changes take effect.
    -->
<link href="/dist/css/skins/<?=$this->skin?>.min.css" rel="stylesheet"
	type="text/css" />

<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
<!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

<style>
.editar {
	width: 20px;
	height: 40px;
	padding: 0px;
	margin: 0px;
}

#formBuscarCliente .error {
	color: Crimson
}

#formNumeroFactura .error {
	color: white
}

#formTipoDePago .error {
	color: white
}

.btn {
	margin : 1px;
}
</style>
</head>
<!--
  BODY TAG OPTIONS:
  =================
  Apply one or more of the following classes to get the
  desired effect
  |---------------------------------------------------------|
  | SKINS         | skin-blue                               |
  |               | skin-black                              |
  |               | skin-purple                             |
  |               | skin-yellow                             |
  |               | skin-red                                |
  |               | skin-green                              |
  |---------------------------------------------------------|
  |LAYOUT OPTIONS | fixed                                   |
  |               | layout-boxed                            |
  |               | layout-top-nav                          |
  |               | sidebar-collapse                        |
  |               | sidebar-mini                            |
  |---------------------------------------------------------|
  -->
<body class="<?=$this->skin?> sidebar-mini">
	<div class="wrapper">


		<!-- Main Header -->
      	<?=$this->render('head.phtml') ?>	
  <!-- Fin Main Header -->

		<!-- Left side column. contains the logo and sidebar -->
		<aside class="main-sidebar">

			<!-- sidebar: style can be found in sidebar.less -->
			<section class="sidebar">

				<!-- Sidebar user panel (optional) -->
				<?=$this->render('sidebaruserpanel.phtml') ?>	
		  <!-- Fin Sidebar user panel -->

				<!-- Sidebar Menu -->
				<?=$this->render('menu.phtml') ?>		
        </section>
			<!-- /.sidebar -->
		</aside>

		<!-- Content Wrapper. Contains page content -->
		<div class="content-wrapper">
			<!-- Content Header (Page header) -->
			<!-- Main content -->
       
          <?=$this->layout()->content?>
       
        <!-- /.content -->
		</div>
		<!-- /.content-wrapper -->

		<!-- Main Footer -->
			
			<?= $this->render('footer.phtml')?>

      <!-- Control Sidebar -->
		<!-- Add the sidebar's background. This div must be placed
           immediately after the control sidebar -->
		<div class="control-sidebar-bg"></div>
	</div>
	<!-- ./wrapper -->

	<!-- REQUIRED JS SCRIPTS -->

	<!-- jQuery 2.1.4 -->
	<script src="/plugins/jQuery/jQuery-2.1.4.min.js"
		type="text/javascript"></script>

	<!-- Script RUT -->
	<script src="/plugins/jQueryRut/jquery.Rut.js" type="text/javascript"></script>

	<!-- Bootstrap 3.3.2 JS -->
	<script src="/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
	<!-- DATA TABES SCRIPT -->
	<script src="/plugins/datatables/jquery.dataTables.min.js"
		type="text/javascript"></script>

	<script src="/plugins/datatables/dataTables.responsive.js"
		type="text/javascript"></script>

	<!-- <script src="/plugins/datatables/dataTables.bootstrap.min.js" type="text/javascript"></script>-->
	<!-- SlimScroll -->
	<script src="/plugins/slimScroll/jquery.slimscroll.min.js"
		type="text/javascript"></script>
	<!-- FastClick -->

	<script src="/plugins/datatables/fnReloadAjax.js" cache="false"></script>
	<script src="/plugins/datatables/dataTables.tableTools.js"
		cache="false"></script>

	<script src="/plugins/fastclick/fastclick.min.js"
		type="text/javascript"></script>
	<!-- AdminLTE App -->
	<script src="/dist/js/app.min.js" type="text/javascript"></script>
	<!-- AdminLTE for demo purposes -->
	<script src="/dist/js/demo.js" type="text/javascript"></script>

	<!-- date-picker -->
	<script src="/plugins/datepicker/bootstrap-datepicker.js"
		type="text/javascript"></script>

	<!-- date-range-picker -->
	<script src="/plugins/daterangepicker/moment.js" type="text/javascript"></script>
	<script src="/plugins/daterangepicker/daterangepicker.js"
		type="text/javascript"></script>

	<!-- iCheck 1.0.1 Script checkbox y radiobuttons -->
	<script src="../../plugins/iCheck/icheck.min.js" type="text/javascript"></script>

	<!-- Script Solo Numeros  -->
	<script type="text/javascript"
		src="/plugins/jquerynumeric/jquery.numeric.js"></script>

	<!-- Jquery Validate -->
	<script src="/plugins/jqueryvalidate/jquery.validate.min.js"
		type="text/javascript"></script>
	<script src="/plugins/jqueryvalidate/additional-methods.min.js"
		type="text/javascript"></script>
	<script src="/plugins/jqueryvalidate/messages_es.min.js"
		type="text/javascript"></script>
		
	<script src="/plugins/jquerynumber/jquery.number.js" type="text/javascript"></script>

	<!-- Select2 -->
	<script src="../../plugins/select2/select2.full.min.js"></script>
	
	<!-- page script -->
	<script src = "/plugins/JqueryAlerts/jquery.alerts.js" type = "text/javascript"></script>
	<script src = "/plugins/jQuery/jquery-migrate-1.2.1.js" type = "text/javascript"></script>

	<script type="text/javascript">

	$(function()
	 {
		obtenerEjecutivos('#ejecutivoSelect');		
		
		var tablaBusquedaCobros=$('#tablePagarCobros').dataTable( {
   	        dom: 'T<"clear">lfrtip',
   	        bFilter: true,
   	        "responsive":true,
   	        "bLengthChange": false,
   	        "autoWidth": false,
   	        tableTools: {
   	            "sSwfPath": "/swf/copy_csv_xls_pdf.swf",
   	            "sRowSelect": "multi",
   	            "aButtons": [ ]
   	        },
   	        "language": {
   				"lengthMenu": "Desplegando _MENU_ registros por p&aacute;gina",
   				"zeroRecords": "Nada encontrado - Lo sentimos",
   				"info": "Mostrando p&aacute;gina _PAGE_ de _PAGES_",
   				"infoEmpty": "No hay registros disponibles",
   				"infoPostFix":    "",
   				"thousands":      ",",
   				"loadingRecords": "Cargando...",
   				"processing":     "Procesando...",
   				"search":         "Buscar:",
   				"infoFiltered ": "(Filtrando de un total de _MAX_ registros)",
   				"paginate": {
   					"first":      "Primero",
   					"last":       "&Uacute;ltimo",
   					"next":       "Siguiente",
   					"previous":   "Anterior"
   					}
   				}   	        
   	    } );

		listaCobrosCompensados(tablaBusquedaCobros);

		$('#totalPagoInput').number(true,0,',','.');

		$('#ejecutivoSelect').select2();
		$('#clienteSelect').select2();
		$('#rutSelect').select2();
		$('#tipoSelect').select2();
		
		$('#formBuscarCliente').validate({
			debug:true,
			rules:{
				ejecutivoSelect:{
					required:false
				},
				clienteSelect:{
					required:false
				},
				rutSelect:{
					required:false
				},
				tipoSelect:{
					required:false
				},
				fechaDesdeHasta:{
					required:false
				}
			},
			messages:
			{
				ejecutivoSelect:"Debe seleccionar un elemento de la lista",
				clienteSelect:"Debe seleccionar un elemento de la lista",
				rutSelect:"Debe seleccionar un elemento de la lista",
				tipoSelect:"Debe seleccionar un elemento de la lista",
				fechaDesdeHasta:"Debe ingresar un rango de fechas",
			},
			invalidHandler:function(event, validator)
			{
								
			},	
			submitHandler:function(form)
			{
				fechaIn="";
				fechaFi="";
				
				if($('#fechaDesdeHasta').val()!='')
				{
					rangoFecha=$('#fechaDesdeHasta').val().toString().split('-');
					fechaInicio=rangoFecha[0].toString().replace(' ','').split('/');
					fechaFinal=rangoFecha[1].toString().replace(' ','').split('/');
					fechaIn=fechaInicio[0]+"-"+fechaInicio[1]+"-"+fechaInicio[2];
					fechaFi=fechaFinal[0]+"-"+fechaFinal[1]+"-"+fechaFinal[2];
				}
				
				datos="idEjecutivo="+$('#ejecutivoSelect').val()+
					  "&idCliente="+$('#clienteSelect').val()+
					  "&idRut="+$('#rutSelect').val()+
					  "&tipoCobro="+$('#tipoSelect').val()+
					  "&fechaInicio="+fechaIn+
					  "&fechaFinal="+fechaFi;
				
				url = '/index.php/compensacion/busquedacobrostipofecha?'+datos;

				
				tablaBusquedaCobros.fnClearTable();				
				tablaBusquedaCobros.fnReloadAjax(url);					
			}
		});         

		$('#formNumeroFactura').validate({
			debug:true,
			rules:{
				numeroFacturaInput:{
					required:true
				}
			},
			messages:
			{
				numeroFacturaInput:"Debe ingresar el n&uacute;mero de factura"
			},
			invalidHandler:function(event, validator)
			{
				
			},	
			submitHandler:function(datos)
			{					
				url="/index.php/compensacion/ingresarnumerofactura";

				var datos="numero="+$('#numeroFacturaInput').val()+"&idCobro="+obtieneIdHonorarioIngresoFactura();
				
				$.ajax({
					
				    url: url,  
				    type: "POST",
				    data: datos,  
				    async:false,
				    success: function(datos)
				    {					    
					    if(datos.registro[0]=='1')
					    {
						 	$('#registraNumeroFactura').removeClass('hide');   
						 	$('#modalngresarNumeroFactura').modal('hide');

						 	listaCobrosCompensados(tablaBusquedaCobros);						 	
					    }	
					    else if(datos.registro[0]=='2')
					    {
					    	$('#errorAccion').removeClass('hide');  
					    	$('#modalngresarNumeroFactura').modal('hide'); 
					    }				
				    },
				    error:function(status)
				    {
				    	$('#errorAccion').removeClass('hide'); 
				    	$('#modalngresarNumeroFactura').modal('hide');  
				    }
				}); 
			}
		});

		$('#formDatosPago').validate({
			debug:true,
			rules:{
				tipoPago:{
					required:true
				},
				numeroTransferenciaInput:{
					required:true
				}
			},
			messages:{
				tipoPago:"",
				numeroTransferenciaInput:"Debe ingresar el n&uacute;mero de transferencia o cheque"				
			},
			invalidHandler:function(event, validator){
				$('#msgTipoPago').css('color','white');
				$('#msgTipoPago').removeClass('hide');
			},	
			submitHandler:function(form)
			{
					var electronico=2;
					var cheque=2;

					if($('.electronico').hasClass('checked'))
					{
						electronico='1';
					}
					else if($('.cheque').hasClass('checked'))
					{
						cheque='1';
					}

					var datos="pagoElectronico="+electronico+
							  "&pagoCheque="+cheque+
							  "&numero="+$('#numeroTransferenciaInput').val()+
							  "&dataCobro="+obtenerDatosPagoMultiple()+
							  "&idUsuario="+<?= $this->id_usuario ?>;

					url="/index.php/compensacion/ingresarcanje";
					
					$.ajax({
					    url: url,  
					    type: "POST",
					    data: datos, 
					    success: function(datos)
					    {						    
							if(datos.registro[0]=='1')
							{
								$('#registraDatosPago').removeClass('hide');
								$('#modalIngresoDatosPago').modal('hide');

								listaCobrosCompensados(tablaBusquedaCobros);
							}
							else if(datos.registro[0]=='2')
							{
								$('#errorAccion').removeClass('hide');
								$('#modalIngresoDatosPago').modal('hide');
							}
							else if(datos.registro[0]=='3')
							{
								$('#numeroDocumentoEncontrado').removeClass('hide');
								$('#numeroTransferenciaInput').val('');
							}
							else if(datos.registro[0]=='4')
							{
								$('#existePagoAsociado').removeClass('hide');
								$('#numeroTransferenciaInput').val('');
							}
					    },
					    error:function(status)
					    {
					    	$('#errorAccion').removeClass('hide');
					    	$('#modalIngresoDatosPago').modal('hide');
					    }
					}); 				
			}
		});

		$('#modalngresarNumeroFactura').on('hidden.bs.modal',function()
		{				
			$('#numeroFacturaInput').val('');
		});	

		$('#modalIngresoDatosPago').on('hidden.bs.modal',function()
		{				
			$('#numeroTransferenciaInput').val('');
		});	

		$('#buttonVerDatosPago').on('click',function()
		{
			if(verificaUnaFila()==1)
			{
				url='/index.php/compensacion/obtienedatospago';
				
				dato="tipoCobro="+tipoCobro()+"&idCobro="+obtenerIdCobro();

				var tipoPago="";
				
				$.ajax({
				    url: url,  
				    type: "POST",
				    data: dato, 
				    success: function(datos)
				    {					   				
						if(datos.canje.length>0)
						{
							if(datos.canje[0]=='1')
							{
								tipoPago="Pago Con Cheque";
							}

							if(datos.canje[1]=='1')
							{
								tipoPago="Pago electronico";
							}
						    		    
					    	$('#modalVerDatosPago').modal();
					    	
							$('#verTipoPago').val(tipoPago);
							$('#verNumeroDocumento').val(datos.canje[2]);
							$('#verUsuarioRegistro').val(datos.canje[3]);
							$('#verfechaRegistro').val(datos.canje[4].toString().replace(/-/g,'/'));
						}
						else
						{
							$('#noDatosPago').removeClass('hide');
						}					
				    },
				    error:function(status)
				    {
				    	
				    }
				});
			}
			else
			{
				$('#soloUnaFila').removeClass('hide');
			}			
		});

		$('#buttonNoDatosPago').on('click',function()
		{
			$('#noDatosPago').addClass('hide');
		});

		$('#buttonAutorizarPago').on('click',function()
		{
			if(verificaUnaFila()==1)
			{
				if($('#tablePagarCobros tbody tr').hasClass('selected'))
				{
					if(obtieneEstadoCobro()=='pendiente'&& $.trim(obtieneValorCobro() != 0 ))
					{
						$('#modalAutorizaPagoExtraordinario').modal();
					}		
					else
					{
						$('#opcionNoAplica').removeClass('hide');
					}		
				}
				else
				{
					$('#seleccionaCobroLista').removeClass('hide');
				}		
			}
			else
			{
				$('#soloUnaFila').removeClass('hide');
			}								
		});	

		$('#buttonAutorizarPagoExtraordinario').on('click',function()
		{
			url="/index.php/cobroindividual/autorizapagoextraordinario";

			datos="idCobro="+obtenerIdCobro()+"&tipoCobro="+tipoCobro();

			$.ajax({
			    url: url,  
			    type: "POST",
			    data: datos, 
			    success: function(datos)
			    {						    
					if(datos.autoriza[0]=='1')
					{
						$('#autorizacionRealizada').removeClass('hide');
						$('#modalAutorizaPagoExtraordinario').modal('hide');
					}
					else if(datos.autoriza[0]=='2')
					{
						$('#modalAutorizaPagoExtraordinario').modal('hide');
						$('#errorAccion').removeClass('hide');
					}
			    },
			    error:function(status)
			    {
			    	$('#modalAutorizaPagoExtraordinario').modal('hide');
			    	$('#errorAccion').removeClass('hide');
			    }
			});
		});

		$('#buttonDatosPago').on('click',function()
		{		
			if($('#tablePagarCobros tbody tr').hasClass('selected'))
			{			
				switch(<?=$this->rol?>)
				{
					case 3:
						if(obtieneFormaPagoAsociada()=='Canje')
						{
							pagoCobro();
						}
						else
						{
							$('#noAutorizado').removeClass('hide');
						}
						break;
					case 5:
						pagoCobro();	
						break;
					case 7:
						pagoCobro();
						break;
				}
			}
			else
			{
				$('#seleccionaCobroLista').removeClass('hide');
			}			
		});

		$('#buttonNoAutorizado').on('click',function()
		{
			$('#noAutorizado').addClass('hide');
		});


		function pagoCobro()
		{
			if(obtieneEstadoCobro()!='anulado')
			{
				if(obtieneEstadoCobro()!='verificado')
				{
					if(obtieneEstadoCobro()=='pendiente' && $.trim(obtieneValorCobro() !=0))
					{												
						if( verificaAutorizacionPago()=='1')
						{
							$('#modalIngresoDatosPago').modal();
							
							$('#totalPagoInput').val(obtieneValorCobro());	
						}
						else
						{
							$('#pagoNoAutorizado').removeClass('hide');						
						}	
					}
					else
					{
						$('#modalIngresoDatosPago').modal();
						$('#totalPagoInput').val(obtieneValorCobro());	
					}
				}
				else
				{
					$('#cobroPagado').removeClass('hide');
				}																
			}	
			else
			{
				$('#cobroEstadoAnulado').removeClass('hide');
			}		
		}

		$('#buttonCobroPagado').on('click',function()
		{
			$('#cobroPagado').addClass('hide');
		});

		var tipo=true;

		$('#buttonNumeroFactura').on('click',function()
		{				
			if($('#tablePagarCobros tbody tr').hasClass('selected'))
			{		
				
				if(verificaNumeroFacturaIngresado().length > 0 )
				{					
					if(parseInt(numeroBlancoGuion().length)+parseInt(verificaNumeroFacturaIngresado().length) >= 2)
					{	
						jAlert("En la selecci\u00f3n ya existen cobros con n\u00fameros de factura. Para modificar un n\u00famero, debe seleccionar un solo cobro!","Alerta");
					}
					else
					{
						if(verificaNumeroFacturaIngresado().length == 1)
						{					
							if(obtieneEstadoCobro()!='anulado')
							{				
								if(verificarHonorario())
								{											
									$('#modalngresarNumeroFactura').modal();
									$('#numeroFacturaInput').val(verificaNumeroFacturaIngresado());							
								}	
								else
								{
									$('#seleccionaHonorarios').removeClass('hide');	
									tipo=true;					
								}
							}
							else
							{
								$('#cobroEstadoAnulado').removeClass('hide');
							}	
						}
					}					
				}
				else
				{
					if(obtieneEstadoCobro()!='anulado')
					{				
						if(verificarHonorario())
						{						
							$('#modalngresarNumeroFactura').modal();													
						}	
						else
						{
							$('#seleccionaHonorarios').removeClass('hide');	
							tipo=true;					
						}
					}
					else
					{
						$('#cobroEstadoAnulado').removeClass('hide');
					}						
				}
			}
			else
			{
				$('#seleccionaCobroLista').removeClass('hide');
			}			
		});

		function numeroBlancoGuion()
		{
			var blancoGuion=new Array();
			
			$('#tablePagarCobros').find('tr.selected').each(function()
			{
				num=$(this).find('span').text();
				
				if(num =='' || num =='-')
				{					
					blancoGuion.push(num);	
				}			
			});	

			return blancoGuion;
		}

		function verificaNumeroFacturaIngresado()
		{
			var numeroFactura=new Array();
			
			$('#tablePagarCobros').find('tr.selected').each(function()
			{
				num=$(this).find('span').text();
								
				if(num!='' && num!='-')
				{
					numeroFactura.push(num);	
				}			
			});	

			return numeroFactura;
		}
				
		function verificarHonorario()
		{			
			$('#tablePagarCobros').find('tr.selected').each(function(){

				verificar=$(this).find('td:first').next().html();

				if(verificar!='Honorario')
				{
					tipo=false;
				}
			});	
			return tipo;
		}	

		function obtieneIdHonorarioIngresoFactura()
		{
			var idHonorario=new Array();	
			
			$('#tablePagarCobros').find('tr.selected').each(function()
			{
				id=$(this).find('td:first').html();
				verificar=$(this).find('td:first').next().html();
								
				if(verificar=='Honorario')
				{
					idHonorario.push({id});	
				}								
			});	

			jsonHonorario=JSON.stringify(idHonorario);

			return jsonHonorario;
		} 


		$('#buttonSoloUnaFila').on('click',function()
		{
			$('#soloUnaFila').addClass('hide');
		});

		$('#buttonAnular').on('click',function()
		{
			if(verificaUnaFila()==1)
			{
				if($('#tablePagarCobros tbody tr').hasClass('selected'))
				{
					if(obtieneEstadoCobro()!='anulado')
					{				
						if(obtieneEstadoCobro()=='pendiente')
						{
							$('#modalAnularCobro').modal();		
						}
						else
						{
							$('#anulaSoloPendientes').removeClass('hide');
						}	
					}
					else
					{
						$('#cobroEstadoAnulado').removeClass('hide');
					}																		
				}
				else
				{
					$('#seleccionaCobroLista').removeClass('hide');
				}
			}		
			else
			{
				$('#soloUnaFila').removeClass('hide');
			}	
		});

		$('#anulaCobro').on('click',function()
		{
			url="/index.php/cobroindividual/modificaestadocobro";
			
			datos="idCobro="+obtenerIdCobro()+"&tipoCobro="+tipoCobro();

			$.ajax({
			    url: url,  
			    type: "POST",
			    data: datos,  
			    async:false,
			    success: function(datos)
			    {	    
					if(datos.estado[0]=='1')
					{
						$('#cobroAnulado').removeClass('hide');
						$('#modalAnularCobro').modal('hide');

						listaCobrosCompensados(tablaBusquedaCobros);
					}
					else if(datos.estado[0]=='2')
					{
						$('#errorAccion').removeClass('hide');
						$('#modalAnularCobro').modal('hide');
					}
			    },
			    error:function(status)
			    {
			    	$('#errorAccion').removeClass('hide');
			    	$('#modalAnularCobro').modal('hide');
			    }		    
			}); 
	
		});

		$('#ejecutivoSelect').on('change',function()
		{
			if($('#ejecutivoSelect').val()!='')
			{
				obtenerClientesByjecutivo('#clienteSelect',$('#ejecutivoSelect').val());
			}	
		});
		
		$('#clienteSelect').on('change',function()
		{
			if($('#clienteSelect').val()!='')
			{					
				obtenerRutCliente('#rutSelect',$('#clienteSelect').val());
			}			
		});	

		$('#buttonPagoNoAutorizado').on('click',function()
		{
			$('#pagoNoAutorizado').addClass('hide');
		});

		$('#buttonAutorizacionRealizada').on('click',function()
		{
			$('#autorizacionRealizada').addClass('hide');
		});

		$('#buttonOpcionNoAplica').on('click',function()
		{
			$('#opcionNoAplica').addClass('hide');
		});	

		$('#buttonCobroEstadoAnulado').on('click',function()
		{
			$('#cobroEstadoAnulado').addClass('hide');
		});
		
		$('#buttonCobroAnulado').on('click',function()
		{
			$('#cobroAnulado').addClass('hide');
		});
					
		$('#buttonAnulaSoloPendientes').on('click',function()
		{
			$('#anulaSoloPendientes').addClass('hide');
		});
		
		$('#buttonExisteFactura').on('click',function()
		{
			$('#existeFactura').addClass('hide');
		});

		$('#buttonSeleccionaHonorarios').on('click',function()
		{
			$('#seleccionaHonorarios').addClass('hide');
		});

		$('#buttonSeleccionaCobroLista').on('click',function()
		{
			$('#seleccionaCobroLista').addClass('hide');
		});	

		$('#buttonRegistraNumeroFactura').on('click',function()
		{
			$('#registraNumeroFactura').addClass('hide');
		});

		$('#buttonExistePagoAsociado').on('click',function()
		{
			$('#existePagoAsociado').addClass('hide');
		});

		$('#buttonErrorAccion').on('click',function()
		{
			$('#errorAccion').addClass('hide');
		});	

		$('#buttonNumeroDocumentoEncontrado').on('click',function()
		{
			$('#numeroDocumentoEncontrado').addClass('hide');
		});	

		$('#buttonRegistraDatosPago').on('click',function()
		{
			$('#registraDatosPago').addClass('hide');
		});					
		
		$('#fechaDesdeHasta').daterangepicker({
			locale: {
		           format: 'DD-MM-YYYY'
		    }
		}); 		

		$('#rutBusquedaCobroInput').Rut(
		{		  
			on_error: function()
			{ 
			   $('#modalRutIncorrecto').modal();
			   $('#rutBusquedaCobroInput').val('');
			},
			format_on: 'keyup'
		});

		//$('#numeroFacturaInput').numeric(',');

		//$('#numeroTransferenciaInput').numeric(',');

		$('#numeroSociedadInput').numeric(',');

		$('#pagoElectronicoRadio').iCheck({
			radioClass: 'iradio_minimal-blue electronico',		          
		}).on('ifChanged',function(e){
		  	$('#msgTipoPago').addClass('hide');	
		}).end();

		$('#pagoChequeRadio').iCheck({
			radioClass: 'iradio_minimal-blue cheque',		          
		}).on('ifChanged',function(e){
		  	$('#msgTipoPago').addClass('hide');	
		}).end();

		//obtener listado de ids para verificar los pagos 	
		
		function verificaAutorizacionPago()
		{
			url="/index.php/cobroindividual/verificaautorizacionpago";

			datos="dataVerificacion="+obtenerDatosPagoMultiple();
			
			var verificado;
			$.ajax({
			    url: url,  
			    type: "POST",
			    data: datos, 
			    async:false,
			    success: function(datos)
			    {						    		    
			    	verificado = datos.autoriza[0];	
			    			    	
			    },
			    error:function(status)
			    {
			    	$('#errorAccion').removeClass('hide');
			    }
			});
			
			return verificado;
		}	

		function listaCobrosCompensados(table)
		{
			url = '/index.php/compensacion/busquedacobrostipofecha?idEjecutivo=&idCliente=&idRut=&fechaInicio=&fechaFinal=&tipoCobro=';
			table.fnClearTable();				
			table.fnReloadAjax(url);	
		}

		function obtenerEjecutivos(objetivo)
		{				
		    url = '/index.php/usuario/listar';
			    
			$(objetivo).empty();			
						
			$('<option>').
			attr({value:""}).
			text('Seleccione').
			prop({disabled: false}).
			appendTo(objetivo);
		
			var dato="";
			
			$.ajax({
			    url: url,  
			    type: "POST",
			    data: dato,  
			    async:false,
			    success: function(datos){
					    
			    	$.each(datos.data, function( index, value ) {
						
						 $('<option>').
						   prop({value:value[0]}).
						   text(value[1]).
						   appendTo(objetivo);
					});	
			    }
			}); 			
		} 
		
		function obtenerClientesByjecutivo(objetivo,idEjecutivo)
		{				
		    url = '/index.php/cliente/listarbyejecutivo?idUsuario='+idEjecutivo;
			    
			$(objetivo).empty();			
						
			$('<option>').
			attr({value:""}).
			text('Seleccione').
			prop({disabled: false}).
			appendTo(objetivo);

			var dato="";
			
			$.ajax({
			    url: url,  
			    type: "POST",
			    data: dato,  
			    async:false,
			    success: function(datos){
				    
			    	$.each(datos.data, function( index, value ) {
						
						 $('<option>').
						   prop({value:value[0]}).
						   text(value[1]).
						   appendTo(objetivo);
					});	
			    }
			}); 			
		} 

		function obtenerRutCliente(objetivo,idCliente)
		{				
		    url = '/index.php/rut/listadorutbyidcliente';	    						

			$(objetivo).empty();
					
			$('<option>').
			attr({value:""}).
			text('Seleccione').
			prop({disabled: false, selected: true}).
			appendTo(objetivo);

			var dato="idCliente="+idCliente;
		
			$.ajax({
			    url: url,  
			    type: "POST",
			    data: dato,  
			    async:false,
			    success: function(datos){
				    
			    	$.each(datos.data, function( index, value ) {
						
						 $('<option>').
						   prop({value:value[0]}).
						   text(value[3]+" - "+value[1]).
						   appendTo(objetivo);
					});	
			    }
			}); 
		}


		
		
		function listadoCobros(id,table,desde)
		{
			 url = '/index.php/compensacion/busquedacobros?id='+id+"&desde="+desde;
			 table.fnClearTable();				
			 table.fnReloadAjax(url);
		}

		function obtieneValorCobro()
		{
			var valor=0;
			
			$('#tablePagarCobros').find('tr.selected').each(function()
			{
				valor+=parseFloat($(this).find('td:first').next().next().next().next().next().next().next().next().next().html().toString().replace('$','').replace(/\./g,''));		
			});
			
			return valor;
		}

		function obtieneNumeroFactura()
		{
			var tiene=0;
			
			$('#tablePagarCobros').find('tr.selected').each(function()
			{
				tiene=$(this).find('td:first').next().next().next().next().next().next().next().next().next().next().next().next().next().html();	
			});			

			return tiene;			
		}

		function obtieneEstadoCobro()
		{
			var estado="";
						
			$('#tablePagarCobros').find('tr.selected').each(function()
			{
				estados=$(this).find('td:first').next().next().next().next().next().next().next().next().next().next().next().html();
				
				switch(estados)
				{
					case 'pendiente': 
						estado='pendiente';  
						break;
					case 'dinero recibido': 
						estado='dinero recibido';  
						break;
					case 'pago emitido': 
						estado='pago emitido';  
						break;
					case 'verificado': 
						estado='verificado';  
						break;
					case 'S/M': 
						estado='S/M';  
						break;
					case 'anulado': 
						estado='anulado'; 
						break;
				}
			});			

			return $.trim(estado);			
		}

		function obtieneFormaPagoAsociada()
		{
			var formapago="Canje";
			var forma="";
						
			$('#tablePagarCobros').find('tr.selected').each(function()
			{
				forma=$(this).find('td:first').next().next().next().next().next().next().next().next().next().next().next().next().html();				
				
				if($.trim(forma)!='Canje')
				{
					formapago=forma;
				}	
			});			

			return $.trim(formapago);			
		}

		//funcion para obtener el id cobro asociado al rut.
		function obtenerIdCobro()
		{
			var id="";			
				$('#tablePagarCobros').find('tr.selected').each(function(){
					id=$(this).find('td:first').html();				
				});
			return id;
		}

		//me indica si el cobro que estoy modificando es honorario o cobroindividual
		//ya que las tablas para los honorarios y cobros individuales estan sepradas.
		function tipoCobro()
		{
			var tipo="";
						
			$('#tablePagarCobros').find('tr.selected').each(function()
			{
				tipo=$(this).find('td:first').next().html();		
				if(tipo=="Honorario")
				{
					id="1";
				}
				else if(tipo=='Cobro')
				{
					id="2";
				}
				else
				{
					id="3";
				}		
			});
			
			return id;
		}

		function obtenerDatosPagoMultiple()
		{
			var data=[];
			var tipoCobro=0;
			
			$('#tablePagarCobros').find('tr.selected').each(function()
			{
				id=$(this).find('td:first').html();
				
				tipo=$(this).find('td:first').next().html();

				if(tipo=="Honorario")
				{
					tipoCobro="1";
				}
				else if(tipo=='Cobro')
				{
					tipoCobro="2";
				}
				else
				{
					tipoCobro="3";
				}	

				data.push({id,tipoCobro});
					
			});
			
			return JSON.stringify(data);
		}

		function verificaUnaFila()
		{
			var fila=0;

			$('#tablePagarCobros').find('tr.selected').each(function()
			{
				fila++;
			});
			
			return fila;
		}
		
	});
	
	</script>

</body>
</html>
